{% set name = "snowpark-checkpoints" %}
{% set version = "0.3.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/snowflakedb/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
  sha256: f29e0a30d0382195a2c1e4cbe5705cb281b85a977768c2e25c9addc7a5ed017b

build:
  # https://github.com/snowflakedb/snowpark-checkpoints/blob/v0.3.0/pyproject.toml#L15
  # From the upstream repository: requires-python = '>=3.9,<3.12'
  skip: True  # [py<39 or py>311]
  script: {{ PYTHON }} -m pip install . -vvv --no-deps --no-build-isolation
  number: 100

requirements:
  host:
    - python
    - hatchling
    - pip
  run:
    - python
    - pandera-io ==0.20.4
    - hypothesis
    - snowflake-snowpark-python >=1.23.0
    - snowflake-connector-python
    - pydantic >=2.0
  run_constrained:
    - pyspark >=3.5.0

# AssertionError: assert 'unknown' != 'unknown'
{% set tests_collectors_to_skip = "test_get_collection_point_source_file_path_scenario_python_source_file" %}
# AssertionError: assert -1 != -1
{% set tests_collectors_to_skip = tests_collectors_to_skip + " or test_get_collection_point_line_of_code_scenario_python_source_file" %}
# E [JAVA_GATEWAY_EXITED] Java gateway process exited before sending its port number.
{% set ignore_collectors_tests = " --ignore=snowpark-checkpoints-collectors/test/unit/test_column_collection.py" %}
{% set ignore_collectors_tests = ignore_collectors_tests + " --ignore=snowpark-checkpoints-collectors/test/unit/test_pandera_column_check_manager.py" %}
{% set ignore_validators_tests = " --ignore=snowpark-checkpoints-validators/test/unit/test_job_context.py" %}
{% set ignore_validators_tests = ignore_validators_tests + " --ignore=snowpark-checkpoints-validators/test/unit/test_spark_migration.py" %}
# E fixture 'session' not found
{% set tests_hypothesis_to_skip = "test_generate_snowpark_dataframe_with_valid_data" %}
{% set tests_hypothesis_to_skip = tests_hypothesis_to_skip + " or test_generate_snowpark_dataframe_with_empty_dataframe" %}
{% set tests_hypothesis_to_skip = tests_hypothesis_to_skip + " or test_generate_snowpark_dataframe_with_null_values" %}
# E assert IntegerType() == LongType()
{% set tests_hypothesis_to_skip = tests_hypothesis_to_skip + " or test_pandera_dtype_to_snowpark_dtype_long" %}

test:
  source_files:
    - snowpark-checkpoints-collectors/test/unit
    - snowpark-checkpoints-configuration/test/unit
    - snowpark-checkpoints-hypothesis/test/unit
    - snowpark-checkpoints-validators/test/unit
  imports:
    - snowflake.snowpark_checkpoints
    - snowflake.snowpark_checkpoints_collector
    - snowflake.snowpark_checkpoints_configuration
    - snowflake.hypothesis_snowpark
  commands:
    - pip check
    - pytest -vv {{ ignore_collectors_tests }} -k "not ({{ tests_collectors_to_skip }})" snowpark-checkpoints-collectors/test/unit
    - pytest -vv snowpark-checkpoints-configuration/test/unit
    - pytest -vv -k "not ({{ tests_hypothesis_to_skip }})" snowpark-checkpoints-hypothesis/test/unit
    - pytest -vv {{ ignore_validators_tests }} snowpark-checkpoints-validators/test/unit
  requires:
    - pip
    - pytest
    - deepdiff
    - pyspark >=3.5.0

about:
  home: https://github.com/snowflakedb/snowpark-checkpoints
  summary: Snowflake Snowpark Checkpoints
  dev_url: https://github.com/snowflakedb/snowpark-checkpoints
  doc_url: https://docs.snowflake.com/en/developer-guide/snowpark/python/snowpark-checkpoints-library
  license: Apache-2.0
  license_family: Apache
  license_file: LICENSE
  description: |
    The snowpark-checkpoints package is a testing library that will help you validate your migrated Snowpark
    code and discover any behavioral differences with the original Apache PySpark code.

extra:
  recipe-maintainers:
    - Cansisti
